import { load } from "../../storage/index.js";
import { renderPostBody, renderPostFooter, renderPostHeader } from "./index.js";
import { loadMoreBtn, loader, displayMessage } from "../../constants.js";
import { masonry } from "../../ux/layout/index.js";

/////////////////////FURTHER WORK
//     GENERATE A LOAD MORE BTN
//     const loadMore = document.createElement("a");
//     loadMore.classList.add("load-button", "black", "underline", "montserrat");
//     loadMore.innerHTML += `Load more`;
//     listSection.appendChild(loadMore);
/////////////////////FURTHER WORK

/**
 * Generates an HTML element for each social media post passed in.
 * The function distinguishes posts posted by the logged in user and posts with media attachements from the rest of the posts.
 * The HTML returned uses the bootstrap elements "card" and contains the CSS-class to pass it into a masonry layout.
 *
 * @param {array, object} postData An array of objects or a single object conatining of social media post(s)
 * @returns {string} Returns a HTML elemement for each social media post passed into the function, displaying the post
 *
 * @uses load To fetch the details of the logged in user form localstorage
 * @uses renderPostHeader To generate the HTML element for the card/post HEADER
 * @uses renderPostBody To generate the HTML element for the card/post BODY
 * @uses renderPostFooter To generate the HTML element for the card/post FOOTER
 */
export function postTemplate(postData) {
  const author = load("profile");
  const header = renderPostHeader(postData);
  const body = renderPostBody(postData);
  const footer = renderPostFooter(postData);

  const card = document.createElement("div");
  card.classList.add("card", "post-thread", "post-photo", "mb-4", "masonry-content");
  card.append(header, body, footer);

  const cardContainer = document.createElement("div");
  cardContainer.classList.add("masonry-brick");
  cardContainer.append(card);

  if (author.name === postData.author.name) {
    card.classList.add("your-post");
  }
  if (postData.media) {
    cardContainer.classList.add("media-masonry-brick");
  }
  return cardContainer;
}

/**
 * Appends a -- SINGLE -- HTML element generated by the postTemplate function to a selected HTML parent element
 * @param {object} post One social media post passed down to the postTemplate function
 * @param {string} parent The HTML parent element that appends the social media post
 *
 * @uses postTemplate To generate an HTML element containing the post
 *
 */
export function renderPostTemplate(post, parent) {
  parent.append(postTemplate(post));
  masonry();
}

/**
 * Appends -- MULTIPLE -- HTML elements generated by the postTemplate function to a selected HTML parent element
 * The funciton breaks at 16 posts.
 * If theres no posts passed down it console.logs the message "no posts in this search or filter".
 *
 * @param {array} postsList An array of social media posts passed down to the postTemplate function
 * @param {string} parent The HTML parent element that appends the social media posts
 *
 * @uses postTemplate To generate a HTML element for each social media post
 *
 */

export function renderPostTemplates(postsList, parent) {
  if (postsList.length === 0 || !postsList) {
    loader.style.display = "none";
    loadMoreBtn.style.display = "none";
    displayMessage.innerText = "there's no posts matching this search or filter";
  } else {
    loader.style.display = "none";
    displayMessage.innerText = "";

    for (let i = 0; i < postsList.length; i++) {
      parent.append(postTemplate(postsList[i]));
    }
    masonry();
  }
}
